<script>
  const socket = io();
  socket.on('connect', () => {
    console.log('Hello!');
  });
  const input = document.getElementById('inputText');
  const list = document.getElementById('list');
  const minimalValue = 1;
  const listNum = 0;

  const sendRequest = async (endpoint, data) => {
    const dataToSend = {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    };
    const response = await fetch(endpoint, dataToSend);
    if (response.status >= 400) return alert('Bad request');
    const dataReceived = await response.json();
    console.log(dataReceived);
  };

  addList = () => {
    // get
    let inputText = filterList(input.value);
    // set
    if (inputText) {
      list.innerHTML += ` <li class=" my-3 py-3 shadow list-group-item " id="list${listNum}">
                <div class="row">
                <div class="col-1">
                <input class="mark-as-done" type="checkbox" id="check${listNum}" onclick="done(${listNum})">
                </div>
                <div class="col-6">
                    <span class=" h4" id="text${listNum}"> ${inputText} </span>
                </div>
                <div class="col-4">
                     <button class=" btn btn-dark" onclick="deleteList(${listNum})">Delete</button>
                     <button class=" btn btn-dark" onclick="editList(${listNum})">Edit</button>
                </div>
                 </div>
                </li> `;
      input.value = '';
      listNum++;
      fixCheckBoxBug('checked-already');
      sendRequest('/new', { content: inputText, dateCreated: new Date().toISOString() });
    }
  };

  fixCheckBoxBug = className => {
    const elements = document.getElementsByClassName('checked-already');
    for (element of elements) {
      document.getElementById(element.id).checked = true;
    }
  };

  done = listId => {
    let checkbox = document.getElementById(`check${listId}`);
    let current = document.getElementById(`text${listId}`);
    let classExit = current.classList.contains('text-decoration-line-through');
    if (classExit == true) {
      current.classList.remove('text-decoration-line-through');
      checkbox.classList.remove('checked-already');
    } else {
      current.classList.add('text-decoration-line-through');
      checkbox.classList.add('checked-already');
    }
  };

  filterList = x => {
    if (x) {
      if (x.length >= minimalValue) {
        return x;
      } else {
        alert('Please enter more than 1 word');
      }
    } else {
      return false;
    }
  };

  editList = listId => {
    let currentText = document.getElementById(`text${listId}`);
    let newText = prompt('Wanna Change list?', currentText.innerHTML);
    if (filterList(newText)) {
      currentText.innerHTML = newText;
    }
  };

  deleteList = listId => {
    let current = document.getElementById(`text${listId}`).innerHTML;
    let deleteConfirm = confirm(`Are you sure to delete ${current}`);
    if (deleteConfirm) {
      let p = document.getElementById('list');
      let c = document.getElementById(`list${listId}`);
      p.removeChild(c);
      sendRequest('/delete', { uniqueId: '' });
      console.log('deleted');
    }
  };
</script>
